/*
	项目剧情：详见群文件
*/

/*
   全局变量：
   bool house; //是否已经购买房屋   
   bool is_black; //大蒜是否已经被侵扰，如果被侵扰每天成长度 -10，每天成长度最多增加30 
   bool dagger; // 是否已经拥有银质匕首
   bool falg; // 当天是否已经看望过小姐
   int heart; //好感度
   int gold; //金币数， 初始为2000
   int action_points; //行动点，每天三个行动点，每天最多四个行动
   int day; // 记录天数
   double garilc; //大蒜数
   int keep; //记录看望卡密拉小姐的连续天数(详见看望函数)
   int interface; // 记录当前界面位置，为了整和所有返回函数和跳转函数

   const int N = ?; // 种植园土地的数量，在打印种植园时要考虑， 初始值为 20
   int garilcs[N][N];
*/


/*
  函数：

   //1. 初始界面，直接在mian函数中
  void init() { 
    //说明：打印背景图片，以及新的游戏、继续游戏、设置三个按钮

	//点击新的游戏：新的游戏会直接重置所有数据，进入游戏界面

	//点击继续游戏：当游戏一段时间后再返回到初始界面，应点击继续游戏，后续可以拓展读取存档
	//注：后期可以增加一个存档按钮，进行存档功能

	//点击退出游戏：直接退出程序
  } 

  
  // 2.游戏界面 
  void game() {
     // 说明：打印背景图，以及返回主页、拟态森、种植园、背包、卡密拉的花房、商店
	 // 且打印对应天数

	 //点击返回主页：跳转初始界面，调用初始界面函数

	 //点击背包：跳转背包界面，调用背包界面函数

	 //点击商店：跳转商店界面，调用商店函数

	 //点击种植园：跳转种植园界面，调转种植园界面

	 //点击拟态森：跳转拟态森界面，调用拟态森函数

	 //点击酒馆集市：点击酒馆集市，消耗一行动点并加100金币

	 //点击卡密拉的家：跳转至卡密拉的花房，调用对应函数
  }

  //3.背包界面
  void bag() {
	// 说明：打印背景图，以及各个物品数据(详见全局变量)

	//点击物品：会出现物品使用说明的弹窗

	//点击返回：返回游戏界面，调用游戏函数
  }


  // 4.商店界面
  void store() {
	// 说明：暂时商店只有卖种子的功能，后续可以拓展，打印购买种子、购买肥料、返回按钮、

	//点击购买种子：点击之后，弹窗(你已经购买了一个种子),并扣除对应金币

	//点击购买肥料(拓展)：点击之后，弹窗(你已经购买了一个肥料),并扣除对应金币，增加20成长度

	//30天会有，一个资本家卖半个大蒜
	
	//20天会出现银质匕首

	//点击返回：返回游戏界面，调用游戏函数
  }

  // 5.卡密拉的花房
  void vampire() {
	// 说明：打印背景图、卡密拉小姐的图片、返回按钮、好感度

	//点击卡密拉：会根据好感度弹窗弹出一些话（且发出语音？），使用字符串数组，使用一定返回的随机输出对应的话
	//每天去看卡密拉小姐会增加好感度

	//点击返回：返回游戏界面，调用游戏函数
  }

  // 6.种植园
  void planting() {
    // 说明：打印背景图、种植大蒜、求助坤坤、采摘大蒜

	//点击种植大蒜：若有大蒜种子则会减少种子数量，且会打印一个大蒜再没有出现的位置，若没有大蒜弹窗提醒
	//可以取商店看看

	//点击求助坤坤：随机减少金币(随机数函数)，且当天大蒜会健康成长(后期可拓展播放坤坤跳舞视频)，
	//减少 200 到 300 不等，用随机数函数mod一个即可

	//点击采摘大蒜：会采摘大蒜，重新打印界面，使已经采摘的大蒜消失，且增加大蒜数量，当没有大蒜可采摘
	//时弹窗弹出(大蒜被小黑子侵扰)

	//点击浇水施肥：消耗两个行动点

	//最后特殊说明：每个大蒜对应一个位置，使用二维数组记录，数值为大蒜的成长度，为-1是代表没有种植，
	//当大蒜成长为100，已经成熟不再受小黑子侵扰
  }

  // 7.拟态森 
  void forset() {
	int to_place = 0; 在点击对应位置后改变数值，调用对应函数

	// 说明：打印背景图，2个可以攻克的探险点(里面具体可以再分关卡)和一个古堡(触发最总剧情)、返回、道具按钮(此处拓展)按钮
	// 探险点为 10天触发一次(消耗1行动点)，并加 500金币和1个大蒜种子;  20天触发一次(消耗1行动点)，并加 1000金币

	// 下面可以不用看
	//点击对应探险点：最初版本(点击之后根据扣除体力值，给一定的金币或者大蒜)
	//暂时可实现版(设置关卡一个一个进行，由于没有道具增加战斗力，可以设置一个熟练度数组(当一个关卡达到一定熟练度直接可以通过)
	//每次探险可以增加战斗力(战斗力可能可以改变最总剧情)，每次探险可以增加战斗力
	//完美版(每个探险点打开也是一个界面，通过一个探险点的所有会有同关奖励)

	//道具(拓展)：最初版(使用一定数量大蒜可以增加临时战斗力，提高通过机会)
  }

  //8.设置界面
  void set() { 
	// 说明: 主要就一个开关音乐的按钮和返回按钮即可
  }

*/

/*
	具体部分实现函数
	1.初始剧情输出
	void start() {
		//说明： 根据群文件具体剧情前导，打印对应文字，注意使用Sleep() 
		//打印完毕直接跳转游戏界面
	}
	
	2.继续游戏 
	void keep_game() {
	   //说明：根据游戏天数，天数初始化为-1， 若天数为-1弹窗提示开始新的游戏，否则打印游戏界面
	}

	3.新的游戏 
	void new_game() {
	  // 说明：重新重置所有数据( 注意标记界面位置的数 )，并调用start函数和游戏接界面函数
	}

	4.返回上一界面函数
	void return_interface() {
	  // 说明： 使用switch case 和 interface数调用 具体界面函数
	  规定： 初始界面 0
			 设置界面 1
			 游戏界面 2
			 背包界面 3
			 商店界面 4
			 卡密拉的花房 5
			 种植园 6
			 拟态森 7
	}

	5.跳转下一界面
	void to_interface() {
	 // 说明：根据interface 数来判断需要进入的界面，每次判断点击坐标区间，跳转界面之前先改变interf，在调用对应界面函数
	}

	6.看望卡密拉
	void vampir_interflow() {
	 // 说明：根据好感度和行动点具体 进行弹窗操作 和 好感度的改变
	 // 小姐初始 后感度为50，每天去见小姐 好感度 + 1，连续十天后 +2
	}

    7.种植大蒜
	void put_garilc() {
	// 说明：判断大蒜种子数量，若为0则弹出对应弹窗进行提示，否则点击减少种子数量，并重新打印种植园界面
	// 注意：此处处BUG肯可能性比较大，尤其在与连续快速点击可能使种子数为0时，所有建议一次只能种植一个种子
	}

	8.收获大蒜
	void get_garilc() {
	// 说明：一次收获所有成长度为100的大蒜，并重新打印种植园界面
	}

	9.求助坤坤
	void ikun() {
	// 说明：现在可以只进行弹窗设置并减少对应行动点
	}
	
	10.行动点判断并进入下一天函数
	void tomorrow() {
	// 说明：每次进行消耗行动点时之后，调用该函数若要行动点为0，弹出弹窗(今天有点累了，或者其他后面可以想)，
	// 对大蒜成长度结算，需要参数(大蒜成长度，是否请坤坤)
	}

	11.探险函数
	void to_explore(int palce) {
	// 根据传入对应place的值进行弹窗和金币、行动点的数值修改，暂定为100金币
	// 当某个特殊的位置加上天数锁，当为到30天时，显示未开启，若达到条件调用结局函数
	}

	12.结局函数
	void end() {
	 // 说明：建一个新界面，进行游戏结局的进行，进行对话或者弹窗之类的
	}

	13.浇水施肥
	void watering() {
     // 说明：所有大蒜成长度加10，行动点 -2
	}

	14.去酒馆集市
	void make_money() {
	// 说明：消耗1行动点并获得100金币，进行弹窗提示
	}
*/





